@startuml

class EncodingModuleClient {
    + static void main(String[] args)
}

class MyDatabase {
    - {static} Map<Integer, String> _data 
    - {static} int _count
    + int write(String inputString)
}

class Base64Encoder implements IEncoder{
    +void encode(IReader reader, IWriter writer)
}

interface IReader {
    + string read()
}

interface IWriter {
    + void write(String data)
}

interface IEncoder {
    +void encode(IReader reader, IWriter writer)
}

class File implements IReader, IWriter{
    + string read()
    + void write(String data)
}

class Network implements IReader{
    + string read()
}

class DatabaseWriter implements IWriter{
    - MyDatabase database
    + void write(String data)
}

DatabaseWriter --> MyDatabase
EncodingModuleClient --> IWriter
IEncoder --> IWriter
IEncoder --> IReader
EncodingModuleClient --> IReader
EncodingModuleClient --> IEncoder

@enduml